[{"title":"C语言手写Httpd网站服务器","url":"/2024/09/26/C%E8%AF%AD%E8%A8%80%E6%89%8B%E5%86%99Httpd%E7%BD%91%E7%AB%99%E6%9C%8D%E5%8A%A1%E5%99%A8/","content":"<hr>\n<h2 id=\"执行WEB服务前的准备工作\"><a href=\"#执行WEB服务前的准备工作\" class=\"headerlink\" title=\"执行WEB服务前的准备工作\"></a>执行WEB服务前的准备工作</h2><h3 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化网络并创建服务端的套接字</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//httpd默认的端口是80，这里指定了8000端口，也可以使用其它端口</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">short</span> port = <span class=\"number\">8000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 初始化网络，并使用指定端口来创建服务端的套接字</span></span><br><span class=\"line\">    <span class=\"type\">int</span> server_sock = startup(&amp;port);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;httpd running on port %d\\n&quot;</span>, port);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"网络通信初始化\"><a href=\"#网络通信初始化\" class=\"headerlink\" title=\"网络通信初始化\"></a>网络通信初始化</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//网络通信需要包含的头文件、需要加载的库文件</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;winsock2.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> comment (lib, <span class=\"string\">&quot;WS2_32.lib&quot;</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化网络并创建服务端的套接字</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    WSADATA wsaData; <span class=\"comment\">// 网络通信相关的版本等信息</span></span><br><span class=\"line\">    <span class=\"type\">int</span> ret = WSAStartup( <span class=\"comment\">// WSAStartup 网络通信初始化，</span></span><br><span class=\"line\">        MAKEWORD(<span class=\"number\">1</span>, <span class=\"number\">1</span>),   <span class=\"comment\">// 指定使用Windows Sockets规范的1.1版本</span></span><br><span class=\"line\">        &amp;wsaData);        <span class=\"comment\">// 存储初始化后的版本等信息结果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ret) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建套接字\"><a href=\"#创建套接字\" class=\"headerlink\" title=\"创建套接字\"></a>创建套接字</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">error_die</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* sc)</span> &#123;</span><br><span class=\"line\">    perror(sc); <span class=\"comment\">//打印错误原因</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化网络并创建服务端的套接字</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> server_socket = socket(PF_INET, <span class=\"comment\">//套接字的类型（网络套接字、文件套接字，此处是前者）</span></span><br><span class=\"line\">        SOCK_STREAM,  <span class=\"comment\">//数据包的类型（数据流、数据报，此处是前者）               </span></span><br><span class=\"line\">        IPPROTO_TCP); <span class=\"comment\">//具体协议</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (server_socket == <span class=\"number\">-1</span>) &#123; <span class=\"comment\">//打印错误提示，并结束程序</span></span><br><span class=\"line\">        error_die(<span class=\"string\">&quot;socket&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置套接字属性–端口可复用\"><a href=\"#设置套接字属性–端口可复用\" class=\"headerlink\" title=\"设置套接字属性–端口可复用\"></a>设置套接字属性–端口可复用</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化网络并创建服务端的套接字</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置端口可复用（端口复用）</span></span><br><span class=\"line\">    <span class=\"type\">int</span> opt = <span class=\"number\">1</span>;</span><br><span class=\"line\">    ret = setsockopt(server_socket, SOL_SOCKET, SO_REUSEADDR, (<span class=\"type\">const</span> <span class=\"type\">char</span>*)&amp;opt, <span class=\"keyword\">sizeof</span>(opt));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ret == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        error_die(<span class=\"string\">&quot;setsockopt&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"绑定套接字和网络地址\"><a href=\"#绑定套接字和网络地址\" class=\"headerlink\" title=\"绑定套接字和网络地址\"></a>绑定套接字和网络地址</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//配置服务器的网络地址</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">server_addr</span>;</span></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(&amp;server_addr, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(server_addr));</span><br><span class=\"line\">    server_addr.sin_family = AF_INET;</span><br><span class=\"line\">    server_addr.sin_port = htons(*port);</span><br><span class=\"line\">    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//绑定套接字</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (bind(server_socket, (<span class=\"keyword\">struct</span> sockaddr*)&amp;server_addr, <span class=\"keyword\">sizeof</span>(server_addr)) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        error_die(<span class=\"string\">&quot;[bind]&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取动态端口\"><a href=\"#获取动态端口\" class=\"headerlink\" title=\"获取动态端口\"></a>获取动态端口</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 动态分配端口</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (*port == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> namelen = <span class=\"keyword\">sizeof</span>(server_addr);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getsockname(server_socket, (<span class=\"keyword\">struct</span> sockaddr*)&amp;server_addr, &amp;namelen) &lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            error_die(<span class=\"string\">&quot;getsockname&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        *port = ntohs(server_addr.sin_port);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> server_socket;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建监听队列\"><a href=\"#创建监听队列\" class=\"headerlink\" title=\"创建监听队列\"></a>创建监听队列</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">startup</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">short</span>* port)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建监听队列</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (listen(server_socket, <span class=\"number\">5</span>) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        error_die(<span class=\"string\">&quot;listen&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> server_socket;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","tags":["服务器"]},{"title":"C语言手写植物大战僵尸","url":"/2024/09/26/C%E8%AF%AD%E8%A8%80%E6%89%8B%E5%86%99%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8/","content":"<hr>\n<h2 id=\"C语言手写植物大战僵尸\"><a href=\"#C语言手写植物大战僵尸\" class=\"headerlink\" title=\"C语言手写植物大战僵尸\"></a>C语言手写植物大战僵尸</h2><h3 id=\"创建主场景\"><a href=\"#创建主场景\" class=\"headerlink\" title=\"创建主场景\"></a>创建主场景</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;graphics.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_WIDTH 900</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIN_HEIGHT 600</span></span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE imgBg;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//游戏初始化</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tloadimage(&amp;imgBg, <span class=\"string\">&quot;res/bg.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tinitgraph(WIN_WIDTH, WIN_HEIGHT);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//更新窗口</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tputimage(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//游戏初始化</span></span><br><span class=\"line\">\tgameInit();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//更新窗口</span></span><br><span class=\"line\">\tupdateWindow();</span><br><span class=\"line\"></span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现植物卡牌\"><a href=\"#实现植物卡牌\" class=\"headerlink\" title=\"实现植物卡牌\"></a>实现植物卡牌</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;tools.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#define ZHI_WU_CUNT 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> &#123;</span> WAN_DOU, XIANG_RI_KUI, ZHI_WU_COUNT &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">IMAGE imgBar;</span><br><span class=\"line\">IMAGE imgCards[ZHI_WU_COUNT];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tloadimage(&amp;imgBar, <span class=\"string\">&quot;res/bar.png&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//初始化植物卡牌</span></span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ZHI_WU_COUNT; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成植物卡牌的文件名</span></span><br><span class=\"line\">\t\tsprintf_s(name, <span class=\"keyword\">sizeof</span>(name), <span class=\"string\">&quot;res/Cards/card_%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tloadimage(&amp;imgCards[i], name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//putimage(250, 0, &amp;imgBar); //有黑边</span></span><br><span class=\"line\">\tputimagePNG(<span class=\"number\">250</span>, <span class=\"number\">0</span>, &amp;imgBar);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ZHI_WU_COUNT; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = <span class=\"number\">338</span> + i * <span class=\"number\">65</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> y = <span class=\"number\">6</span>;</span><br><span class=\"line\">\t\tputimage(x, y, &amp;imgCards[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现植物的选择和拖动\"><a href=\"#实现植物的选择和拖动\" class=\"headerlink\" title=\"实现植物的选择和拖动\"></a>实现植物的选择和拖动</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">IMAGE* imgZhiWu[ZHI_WU_COUNT][<span class=\"number\">20</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> curX, curY; <span class=\"comment\">//当前选中的植物，在移动过程中的位置</span></span><br><span class=\"line\"><span class=\"type\">int</span> curZhiWu; <span class=\"comment\">//0:没有选中，1:选择了第一种植物 etc.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">fileExist</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* name)</span> &#123;</span><br><span class=\"line\">\tFILE* fp = fopen(name, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (fp == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tfclose(fp);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(imgZhiWu, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(imgZhiWu));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//初始化植物卡牌</span></span><br><span class=\"line\">\t<span class=\"type\">char</span> name[<span class=\"number\">64</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ZHI_WU_COUNT; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">20</span>; j++) &#123;</span><br><span class=\"line\">\t\t\tsprintf_s(name, <span class=\"keyword\">sizeof</span>(name), <span class=\"string\">&quot;res/zhiwu/%d/%d.png&quot;</span>, i, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//先判断这个文件是否存在</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (fileExist(name)) &#123;</span><br><span class=\"line\">\t\t\t\timgZhiWu[i][j] = new IMAGE;</span><br><span class=\"line\">\t\t\t\tloadimage(imgZhiWu[i][j], name);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcurZhiWu = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//创建游戏的图形窗口</span></span><br><span class=\"line\">\tinitgraph(WIN_WIDTH, WIN_HEIGHT, <span class=\"number\">1</span>); <span class=\"comment\">//加一个参数1，保留后台界面，方便调试</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tBeginBatchDraw(); <span class=\"comment\">//开始缓冲（先打印到内存中）</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//渲染 拖动过程中的植物</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (curZhiWu &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tIMAGE* img = imgZhiWu[curZhiWu - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\tputimagePNG(curX - img-&gt;getwidth() / <span class=\"number\">2</span>, curY - img-&gt;getheight() / <span class=\"number\">2</span>, img);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tEndBatchDraw(); <span class=\"comment\">//结束双缓冲（再一次性打印到窗口）</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">userClick</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tExMessage msg;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> status = <span class=\"number\">0</span>;<span class=\"comment\">//状态变量（先点击再拖动）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (peekmessage(&amp;msg)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左击按下</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">338</span> &amp;&amp; msg.x &lt; <span class=\"number\">338</span> + <span class=\"number\">65</span> * ZHI_WU_COUNT &amp;&amp; msg.y &lt; <span class=\"number\">96</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = (msg.x - <span class=\"number\">338</span>) / <span class=\"number\">65</span>; <span class=\"comment\">//选择卡牌序号</span></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, index);</span><br><span class=\"line\">\t\t\t\tstatus = <span class=\"number\">1</span>; <span class=\"comment\">//可以拖动</span></span><br><span class=\"line\">\t\t\t\tcurZhiWu = index + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_MOUSEMOVE &amp;&amp; status == <span class=\"number\">1</span>) &#123; <span class=\"comment\">//鼠标移动</span></span><br><span class=\"line\">\t\t\tcurX = msg.x;</span><br><span class=\"line\">\t\t\tcurY = msg.y;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONUP) &#123; <span class=\"comment\">//左键抬起</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> main(<span class=\"type\">void</span>) &#123;</span><br><span class=\"line\">\tgameInit();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\tuserClick();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tupdateWindow();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现植物的种植\"><a href=\"#实现植物的种植\" class=\"headerlink\" title=\"实现植物的种植\"></a>实现植物的种植</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">zhiwu</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> type;\t\t<span class=\"comment\">//0:没有选中，1:第一种植物\tetc.\t\t\t\t</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//序列帧的序号</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">zhiwu</span> <span class=\"title\">map</span>[3][9];</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(<span class=\"built_in\">map</span>, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(<span class=\"built_in\">map</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">map</span>[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> x = <span class=\"number\">256</span> + j * <span class=\"number\">81</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> y = <span class=\"number\">179</span> + i * <span class=\"number\">102</span> + <span class=\"number\">14</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> zhiWuType = <span class=\"built_in\">map</span>[i][j].type - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = <span class=\"built_in\">map</span>[i][j].frameIndex;</span><br><span class=\"line\">\t\t\t\tputimagePNG(x, y, imgZhiWu[zhiWuType][index]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">userClick</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (peekmessage(&amp;msg)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONUP) &#123; <span class=\"comment\">//左键抬起</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">256</span> &amp;&amp; msg.y &gt; <span class=\"number\">179</span> &amp;&amp; msg.y &lt; <span class=\"number\">489</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> row = (msg.y - <span class=\"number\">179</span>) / <span class=\"number\">102</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> col = (msg.x - <span class=\"number\">256</span>) / <span class=\"number\">81</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//printf(&quot;%d, %d\\n&quot;, row, col);</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">map</span>[row][col].type == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">map</span>[row][col].type = curZhiWu;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">map</span>[row][col].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tcurZhiWu = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tstatus = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现植物的摇摆\"><a href=\"#实现植物的摇摆\" class=\"headerlink\" title=\"实现植物的摇摆\"></a>实现植物的摇摆</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//更新游戏相关数据</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateGame</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">map</span>[i][j].type &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">map</span>[i][j].frameIndex++;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> zhiWuType = <span class=\"built_in\">map</span>[i][j].type - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> index = <span class=\"built_in\">map</span>[i][j].frameIndex;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (imgZhiWu[zhiWuType][index] == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">map</span>[i][j].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">\tgameInit();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\tuserClick();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tupdateWindow();</span><br><span class=\"line\">\t\tupdateGame(); <span class=\"comment\">//更新游戏相关数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">10</span>);<span class=\"comment\">//帧等待</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"优化游戏循环和游戏渲染循序\"><a href=\"#优化游戏循环和游戏渲染循序\" class=\"headerlink\" title=\"优化游戏循环和游戏渲染循序\"></a>优化游戏循环和游戏渲染循序</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tBeginBatchDraw(); <span class=\"comment\">//开始缓冲</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//渲染 拖动过程中的植物（放到了最后）</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (curZhiWu &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tIMAGE* img = imgZhiWu[curZhiWu - <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\tputimagePNG(curX - img-&gt;getwidth() / <span class=\"number\">2</span>, curY - img-&gt;getheight() / <span class=\"number\">2</span>, img);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tEndBatchDraw(); <span class=\"comment\">//结束双缓冲</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">\tgameInit();</span><br><span class=\"line\">\t<span class=\"type\">int</span> timer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\tuserClick();</span><br><span class=\"line\">\t\ttimer += getDelay();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (timer &gt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\ttimer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\tupdateWindow();</span><br><span class=\"line\">\t\t\tupdateGame();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"制作启动菜单\"><a href=\"#制作启动菜单\" class=\"headerlink\" title=\"制作启动菜单\"></a>制作启动菜单</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">startUI</span><span class=\"params\">()</span> &#123; <span class=\"comment\">//启动菜单</span></span><br><span class=\"line\">\tIMAGE imgBg,imgMenu1,imgMenu2;</span><br><span class=\"line\">\tloadimage(&amp;imgBg, <span class=\"string\">&quot;res/menu.png&quot;</span>);</span><br><span class=\"line\">\tloadimage(&amp;imgMenu1, <span class=\"string\">&quot;res/menu1.png&quot;</span>);</span><br><span class=\"line\">\tloadimage(&amp;imgMenu2, <span class=\"string\">&quot;res/menu2.png&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\tBeginBatchDraw();</span><br><span class=\"line\">\t\tputimage(<span class=\"number\">0</span>, <span class=\"number\">0</span>, &amp;imgBg);</span><br><span class=\"line\">\t\tputimagePNG(<span class=\"number\">474</span>, <span class=\"number\">75</span>, flag ? &amp;imgMenu2: &amp;imgMenu1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tExMessage msg;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (peekmessage(&amp;msg)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN&amp;&amp;</span><br><span class=\"line\">\t\t\t\t\tmsg.x&gt;<span class=\"number\">474</span>&amp;&amp;msg.x&lt;<span class=\"number\">474</span>+<span class=\"number\">300</span>&amp;&amp;</span><br><span class=\"line\">\t\t\t\t\tmsg.y&gt;<span class=\"number\">75</span>&amp;&amp;msg.y&lt;<span class=\"number\">75</span>+<span class=\"number\">140</span>)&#123;</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//EndBatchDraw();</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (msg.message == WM_LBUTTONUP&amp;&amp;flag) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tEndBatchDraw();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span> &#123;</span><br><span class=\"line\">\tgameInit();</span><br><span class=\"line\"></span><br><span class=\"line\">\tstartUI();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> timer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\tuserClick();</span><br><span class=\"line\">\t\ttimer += getDelay();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (timer &gt; <span class=\"number\">20</span>) &#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\ttimer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\tupdateWindow();</span><br><span class=\"line\">\t\t\tupdateGame();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSleep(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsystem(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建随机阳光\"><a href=\"#创建随机阳光\" class=\"headerlink\" title=\"创建随机阳光\"></a>创建随机阳光</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;time.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sunshineBall</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> x, y; <span class=\"comment\">//阳光球在飘落过程中的坐标位置（x不变）</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前显示的图片帧的序号</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> destY; <span class=\"comment\">//飘落的目标位置的y坐标</span></span><br><span class=\"line\">\t<span class=\"type\">bool</span> used; <span class=\"comment\">//是否在使用</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//阳光池</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sunshineBall</span> <span class=\"title\">balls</span>[10];</span></span><br><span class=\"line\">IMAGE imgSunshineBall[<span class=\"number\">29</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(balls, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(balls));</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">29</span>; i++) &#123;</span><br><span class=\"line\">\t\tsprintf_s(name, <span class=\"keyword\">sizeof</span>(name), <span class=\"string\">&quot;res/sunshine/%d.png&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tloadimage(&amp;imgSunshineBall[i], name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//配置随机种子</span></span><br><span class=\"line\">\tsrand(time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">creatSunshine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> fre = <span class=\"number\">400</span>;</span><br><span class=\"line\">\tcount++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (count &gt;= fre) &#123; <span class=\"comment\">//每fre帧创建一个阳光，fre随机改变</span></span><br><span class=\"line\">\t\tfre = <span class=\"number\">200</span> + rand() % <span class=\"number\">200</span>;</span><br><span class=\"line\">\t\tcount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//从阳光池中取一个可以使用的</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ballMax = <span class=\"keyword\">sizeof</span>(balls) / <span class=\"keyword\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; ballMax &amp;&amp; balls[i].used; i++);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (i &gt;= ballMax) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tballs[i].used = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\tballs[i].frameIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tballs[i].x = <span class=\"number\">260</span> + rand() % (<span class=\"number\">900</span> - <span class=\"number\">260</span>);</span><br><span class=\"line\">\t\tballs[i].y = <span class=\"number\">60</span>;</span><br><span class=\"line\">\t\tballs[i].destY = <span class=\"number\">200</span> + (rand() % <span class=\"number\">4</span>) * <span class=\"number\">90</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateGame</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tcreatSunshine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示随机阳光\"><a href=\"#显示随机阳光\" class=\"headerlink\" title=\"显示随机阳光\"></a>显示随机阳光</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sunshineBall</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> x, y; <span class=\"comment\">//阳光球在飘落过程中的坐标位置（x不变）</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> frameIndex; <span class=\"comment\">//当前显示的图片帧的序号</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> destY; <span class=\"comment\">//飘落的目标位置的y坐标</span></span><br><span class=\"line\">\t<span class=\"type\">bool</span> used; <span class=\"comment\">//是否在使用</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> timer; <span class=\"comment\">//计时器</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ballMax = <span class=\"keyword\">sizeof</span>(balls) / <span class=\"keyword\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ballMax; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (balls[i].used) &#123;</span><br><span class=\"line\">\t\t\tIMAGE* img = &amp;imgSunshineBall[balls[i].frameIndex];</span><br><span class=\"line\">\t\t\tputimagePNG(balls[i].x, balls[i].y, img);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">creatSunshine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (count &gt;= fre) &#123;</span><br><span class=\"line\">\t\tballs[i].timer = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateSunshine</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ballMax = <span class=\"keyword\">sizeof</span>(balls) / <span class=\"keyword\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; ballMax; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (balls[i].used) &#123;</span><br><span class=\"line\">\t\t\tballs[i].frameIndex = (balls[i].frameIndex + <span class=\"number\">1</span>) % <span class=\"number\">29</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (balls[i].timer == <span class=\"number\">0</span>) &#123; <span class=\"comment\">//未到达地面</span></span><br><span class=\"line\">\t\t\t\tballs[i].y += <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (balls[i].y &gt;= balls[i].destY) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//balls[i].used = false;</span></span><br><span class=\"line\">\t\t\t\tballs[i].timer++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (balls[i].timer &gt; <span class=\"number\">100</span>) &#123; <span class=\"comment\">//掉到地面100帧之后</span></span><br><span class=\"line\">\t\t\t\t\tballs[i].used = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateGame</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tcreatSunshine(); <span class=\"comment\">//创建阳光</span></span><br><span class=\"line\">\tupdateSunshine(); <span class=\"comment\">//更新阳光的状态</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"收集阳光、显示阳光值\"><a href=\"#收集阳光、显示阳光值\" class=\"headerlink\" title=\"收集阳光、显示阳光值\"></a>收集阳光、显示阳光值</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;mmsystem.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">pragma</span> comment(lib,<span class=\"string\">&quot;winmm.lib&quot;</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> sunshine; <span class=\"comment\">//总阳光值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">gameInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tsunshine = <span class=\"number\">150</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//设置字体</span></span><br><span class=\"line\">\tLOGFONT f;</span><br><span class=\"line\">\tgettextstyle(&amp;f);                     <span class=\"comment\">// 获取当前字体设置</span></span><br><span class=\"line\">\tf.lfHeight = <span class=\"number\">30</span>;                      <span class=\"comment\">// 设置字体高度为 48</span></span><br><span class=\"line\">\tf.lfWidth = <span class=\"number\">15</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">strcpy</span>(f.lfFaceName, <span class=\"string\">&quot;Segoe UI Black&quot;</span>); </span><br><span class=\"line\">\tf.lfQuality = ANTIALIASED_QUALITY;    <span class=\"comment\">// 设置输出效果为抗锯齿  </span></span><br><span class=\"line\">\tsettextstyle(&amp;f);                     <span class=\"comment\">// 设置字体样式</span></span><br><span class=\"line\">\tsetbkmode(TRANSPARENT);\t\t\t\t  <span class=\"comment\">//背景模式透明</span></span><br><span class=\"line\">\tsetcolor(BLACK);\t\t\t\t\t  <span class=\"comment\">//字体颜色</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">updateWindow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> scoreText[<span class=\"number\">8</span>];</span><br><span class=\"line\">\tsprintf_s(scoreText, <span class=\"keyword\">sizeof</span>(scoreText), <span class=\"string\">&quot;%d&quot;</span>, sunshine);</span><br><span class=\"line\">\touttextxy(<span class=\"number\">276</span>, <span class=\"number\">67</span>, scoreText); <span class=\"comment\">//在指定位置输出文本--分数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">collectSunshine</span><span class=\"params\">(ExMessage* msg)</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> count = <span class=\"keyword\">sizeof</span>(balls) / <span class=\"keyword\">sizeof</span>(balls[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t<span class=\"type\">int</span> w = imgSunshineBall[<span class=\"number\">0</span>].getwidth(); <span class=\"comment\">//阳光球宽度</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> h = imgSunshineBall[<span class=\"number\">0</span>].getheight();<span class=\"comment\">//阳光球高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (balls[i].used) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x = balls[i].x;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> y = balls[i].y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg-&gt;x &gt; x &amp;&amp; msg-&gt;x &lt; x + w &amp;&amp; msg-&gt;y &gt; y &amp;&amp; msg-&gt;y &lt; y + h) &#123;</span><br><span class=\"line\">\t\t\t\tballs[i].used = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t\tsunshine += <span class=\"number\">25</span>;</span><br><span class=\"line\">\t\t\t\tmciSendString(<span class=\"string\">&quot;play res/sunshine.mp3&quot;</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>); <span class=\"comment\">//添加音效</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">userClick</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\tExMessage msg;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> status = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (peekmessage(&amp;msg)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (msg.message == WM_LBUTTONDOWN) &#123; <span class=\"comment\">//左击按下</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (msg.x &gt; <span class=\"number\">338</span> &amp;&amp; msg.x &lt; <span class=\"number\">338</span> + <span class=\"number\">65</span> * ZHI_WU_COUNT &amp;&amp; msg.y &lt; <span class=\"number\">96</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tcollectSunshine(&amp;msg);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","tags":["C PvZ"]},{"title":"Java 综合实战（一）","url":"/2024/09/24/Java%20%E7%BB%BC%E5%90%88%E5%AE%9E%E6%88%98/","content":"<hr>\n<h2 id=\"Java-综合实战（一）\"><a href=\"#Java-综合实战（一）\" class=\"headerlink\" title=\"Java 综合实战（一）\"></a>Java 综合实战（一）</h2><h3 id=\"健康计算器\"><a href=\"#健康计算器\" class=\"headerlink\" title=\"健康计算器\"></a>健康计算器</h3><p><strong>需求：开发一个简单的健康计算器应用程序，它可以接受用户的输入（如年龄、性别、体重、身高），并计算出用户的 BMI（身体质量指数）和 BMR（基础代谢率）。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请您输入您的身高：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">double</span> height=sc.nextDouble();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请您输入您的体重：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">double</span> weight=sc.nextDouble();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请您输入您的性别（男/女）：&quot;</span>);</span><br><span class=\"line\">        String sex=sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请您输入您的年龄：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> age=sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">double</span> bmi=calcBMI(height,weight);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您的BMI值为：&quot;</span>+bmi);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">double</span> bmr=calcBMR(height,weight,age,sex);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您的BMR值为：&quot;</span>+bmr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">calcBMI</span><span class=\"params\">(<span class=\"type\">double</span> height,<span class=\"type\">double</span> weight)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> weight/(height*height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">calcBMR</span><span class=\"params\">(<span class=\"type\">double</span> height,<span class=\"type\">double</span> weight,<span class=\"type\">int</span> age,String sex)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> bmr=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sex.equals(<span class=\"string\">&quot;男&quot;</span>))&#123;</span><br><span class=\"line\">            bmr=<span class=\"number\">88.362</span>+<span class=\"number\">13.397</span>*weight+<span class=\"number\">4.799</span>*height-<span class=\"number\">5.677</span>*age;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            bmr=<span class=\"number\">447.593</span>+<span class=\"number\">9.247</span>*weight+<span class=\"number\">3.098</span>*height-<span class=\"number\">4.330</span>*age;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bmr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"简单计算器\"><a href=\"#简单计算器\" class=\"headerlink\" title=\"简单计算器\"></a>简单计算器</h3><p><strong>需求：设计一个可以执行基本数学运算（加、减、乘、除）的计算器程序。</strong><br><strong>功能描述：用户输入两个数字、一个运算符（+、-、*、&#x2F;）。根据所选运算符执行相应的数学运算，显示运算结果。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入第一个数字：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">double</span> num1=sc.nextDouble();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入第二个数字：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">double</span> num2=sc.nextDouble();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入运算符（+、-、*、/）：&quot;</span>);</span><br><span class=\"line\">        String operator=sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">double</span> result=calculate(num1,num2,operator);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;计算结果为：&quot;</span>+result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">calculate</span><span class=\"params\">(<span class=\"type\">double</span> num1,<span class=\"type\">double</span> num2,String operator)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> result=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (operator)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;+&quot;</span>:</span><br><span class=\"line\">                result=num1+num2;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;-&quot;</span>:</span><br><span class=\"line\">                result=num1-num2;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;*&quot;</span>:</span><br><span class=\"line\">                result=num1*num2;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">                result=num1/num2;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入的运算符有误！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"猜数字小游戏\"><a href=\"#猜数字小游戏\" class=\"headerlink\" title=\"猜数字小游戏\"></a>猜数字小游戏</h3><p><strong>需求：随机生成一个1-100之间的数据，提示用户猜测，猜大提示过大，猜小提示过小，直到猜中结束游戏。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        guessNumber();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">guessNumber</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*方法一*/</span></span><br><span class=\"line\">        <span class=\"comment\">//Math.random()返回[0,1)之间的随机小数</span></span><br><span class=\"line\">        <span class=\"comment\">//(int)(Math.random()*100)==&gt;[0,100)的整数==&gt;[0,99]+1==&gt;[1,100]</span></span><br><span class=\"line\">        <span class=\"comment\">//int number=(int)(Math.random()*100)+1;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*方法二*/</span></span><br><span class=\"line\">        Random r=<span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"type\">int</span> number=r.nextInt(<span class=\"number\">100</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入一个1~100之间的数字：&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> guess=sc.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(guess&lt;number)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;猜小了，再试试吧！&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(guess&gt;number)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;猜大了，再试试吧！&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;恭喜你猜对了！&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"开发一个验证码\"><a href=\"#开发一个验证码\" class=\"headerlink\" title=\"开发一个验证码\"></a>开发一个验证码</h3><p><strong>需求：开发一个程序，可以生成指定位数的验证码，每位可以是数字，大小写字母。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(getCode(<span class=\"number\">6</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getCode</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">        String code=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> type=(<span class=\"type\">int</span>)(Math.random()*<span class=\"number\">3</span>); <span class=\"comment\">//数字0/大写1/小写2</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">switch</span>(type)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                    <span class=\"type\">int</span> num=(<span class=\"type\">int</span>)(Math.random()*<span class=\"number\">10</span>);</span><br><span class=\"line\">                    code+=num;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                    <span class=\"type\">int</span> num1=(<span class=\"type\">int</span>)(Math.random()*<span class=\"number\">26</span>)+<span class=\"number\">65</span>;</span><br><span class=\"line\">                    code+=(<span class=\"type\">char</span>)num1;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                    <span class=\"type\">int</span> num2=(<span class=\"type\">int</span>)(Math.random()*<span class=\"number\">26</span>)+<span class=\"number\">97</span>;</span><br><span class=\"line\">                    code+=(<span class=\"type\">char</span>)num2;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"找素数\"><a href=\"#找素数\" class=\"headerlink\" title=\"找素数\"></a>找素数</h3><p><strong>需求：输出101-200之间的所有素数以及总个数。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test4</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//目标：找出101-200之间的全部素数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">101</span>;i&lt;=<span class=\"number\">200</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isPrime(i))&#123;</span><br><span class=\"line\">                System.out.println(i);</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;素数的个数为：&quot;</span>+count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> num)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>;i*i&lt;=num;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num%i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"斗地主游戏\"><a href=\"#斗地主游戏\" class=\"headerlink\" title=\"斗地主游戏\"></a>斗地主游戏</h3><p><strong>需求：开发一个简易版的斗地主游戏，要求只完成做牌（存储54张牌）、洗牌。</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        String[] poker=<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[<span class=\"number\">54</span>];</span><br><span class=\"line\">        String[] colors=&#123;<span class=\"string\">&quot;♠&quot;</span>,<span class=\"string\">&quot;♥&quot;</span>,<span class=\"string\">&quot;♣&quot;</span>,<span class=\"string\">&quot;♦&quot;</span>&#125;;</span><br><span class=\"line\">        String[] nums=&#123;<span class=\"string\">&quot;2&quot;</span>,<span class=\"string\">&quot;3&quot;</span>,<span class=\"string\">&quot;4&quot;</span>,<span class=\"string\">&quot;5&quot;</span>,<span class=\"string\">&quot;6&quot;</span>,<span class=\"string\">&quot;7&quot;</span>,<span class=\"string\">&quot;8&quot;</span>,<span class=\"string\">&quot;9&quot;</span>,<span class=\"string\">&quot;10&quot;</span>,<span class=\"string\">&quot;J&quot;</span>,<span class=\"string\">&quot;Q&quot;</span>,<span class=\"string\">&quot;K&quot;</span>,<span class=\"string\">&quot;A&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;colors.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;nums.length;j++)&#123;</span><br><span class=\"line\">                poker[index++]=colors[i]+nums[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        poker[index++]=<span class=\"string\">&quot;Big Joker&quot;</span>;</span><br><span class=\"line\">        poker[index++]=<span class=\"string\">&quot;Small Joker&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//打印牌</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;poker.length;i++)&#123;</span><br><span class=\"line\">            System.out.print(poker[i]+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//洗牌</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;poker.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j=(<span class=\"type\">int</span>)(Math.random()*poker.length);</span><br><span class=\"line\">            String temp=poker[i];</span><br><span class=\"line\">            poker[i]=poker[j];</span><br><span class=\"line\">            poker[j]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;洗牌后：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;poker.length;i++)&#123;</span><br><span class=\"line\">            System.out.print(poker[i]+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"石头迷阵游戏\"><a href=\"#石头迷阵游戏\" class=\"headerlink\" title=\"石头迷阵游戏\"></a>石头迷阵游戏</h3><p><strong>需求：只需完成数据初始化</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        start(<span class=\"number\">5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">start</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span>[][] arr=<span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n][n];</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"type\">int</span> count=<span class=\"number\">1</span>;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">               arr[i][j]=count++;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       print(arr);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//打乱二维数组中的元素顺序</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;arr[i].length;j++)&#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> x=(<span class=\"type\">int</span>)(Math.random()*arr.length);</span><br><span class=\"line\">                <span class=\"type\">int</span> y=(<span class=\"type\">int</span>)(Math.random()*arr[i].length);</span><br><span class=\"line\">                <span class=\"type\">int</span> temp=arr[i][j];</span><br><span class=\"line\">                arr[i][j]=arr[x][y];</span><br><span class=\"line\">                arr[x][y]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;------------------&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;打乱后：&quot;</span>);</span><br><span class=\"line\">        print(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">(<span class=\"type\">int</span>[][] arr)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;arr[i].length;j++)&#123;</span><br><span class=\"line\">                System.out.print(arr[i][j]+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","tags":["Java"]},{"title":"Markdown 语法","url":"/2024/09/09/Markdown%E8%AF%AD%E6%B3%95/","content":"<h2 id=\"Markdown-标题\"><a href=\"#Markdown-标题\" class=\"headerlink\" title=\"Markdown 标题\"></a>Markdown 标题</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 三级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#### 四级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">##### 五级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">###### 六级标题</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;<strong>或者在文本下方添加任意数量的 &#x3D; 或 - 分别用于表示一级标题或二级标题</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">一级标题</span></span><br><span class=\"line\"><span class=\"section\">=========</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">二级标题</span></span><br><span class=\"line\"><span class=\"section\">---------</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-字体\"><a href=\"#Markdown-字体\" class=\"headerlink\" title=\"Markdown 字体\"></a>Markdown 字体</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体文字*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"emphasis\">_斜体文字_</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**粗体文字**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">__粗体文字__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体文字*</span>**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">__<span class=\"emphasis\">_粗斜体文字_</span>__</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-引用\"><a href=\"#Markdown-引用\" class=\"headerlink\" title=\"Markdown 引用\"></a>Markdown 引用</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt;这是引用的内容</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;这是引用的内容</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-分割线\"><a href=\"#Markdown-分割线\" class=\"headerlink\" title=\"Markdown 分割线\"></a>Markdown 分割线</h2><p>&nbsp;<strong>三个或者三个以上的 - 或者 * 或者 _ 都可以</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">****</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">____</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Markdown-下划线\"><a href=\"#Markdown-下划线\" class=\"headerlink\" title=\"Markdown 下划线\"></a>Markdown 下划线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">u</span>&gt;</span></span>带下划线文本<span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">u</span>&gt;</span></span>   </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-删除线\"><a href=\"#Markdown-删除线\" class=\"headerlink\" title=\"Markdown 删除线\"></a>Markdown 删除线</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">~~tencent.com~~</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-图片\"><a href=\"#Markdown-图片\" class=\"headerlink\" title=\"Markdown 图片\"></a>Markdown 图片</h2><h3 id=\"插入互联网上图片\"><a href=\"#插入互联网上图片\" class=\"headerlink\" title=\"插入互联网上图片\"></a>插入互联网上图片</h3><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">图片链接 &#x27;&#x27;图片title&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>图片描述就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。<br>注意：title可加可不加，图片描述可写可不写。</p>\n</blockquote>\n<h3 id=\"插入本地图片\"><a href=\"#插入本地图片\" class=\"headerlink\" title=\"插入本地图片\"></a>插入本地图片</h3><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">图片本地路径 &#x27;&#x27;图片title&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>图片描述就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。<br>注意：title可加可不加，图片描述可写可不写。</p>\n</blockquote>\n<h2 id=\"Markdown-超链接\"><a href=\"#Markdown-超链接\" class=\"headerlink\" title=\"Markdown 超链接\"></a>Markdown 超链接</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">超链接名</span>](<span class=\"link\">超链接地址 &quot;超链接title&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>&nbsp;<strong>注：title可加可不加</strong></p>\n<h2 id=\"Markdown-列表\"><a href=\"#Markdown-列表\" class=\"headerlink\" title=\"Markdown 列表\"></a>Markdown 列表</h2><h3 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h3><p>&nbsp;<strong>无序列表用 - + * 任何一种都可以</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">*</span> 第一项</span><br><span class=\"line\"><span class=\"bullet\">*</span> 第二项</span><br><span class=\"line\"><span class=\"bullet\">*</span> 第三项</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">+</span> 第一项</span><br><span class=\"line\"><span class=\"bullet\">+</span> 第二项</span><br><span class=\"line\"><span class=\"bullet\">+</span> 第三项</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> 第一项</span><br><span class=\"line\"><span class=\"bullet\">-</span> 第二项</span><br><span class=\"line\"><span class=\"bullet\">-</span> 第三项</span><br></pre></td></tr></table></figure>\n<h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 第一项</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 第二项</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 第三项</span><br></pre></td></tr></table></figure>\n<h3 id=\"嵌套列表\"><a href=\"#嵌套列表\" class=\"headerlink\" title=\"嵌套列表\"></a>嵌套列表</h3><p>&nbsp;<strong>上一级和下一级之间敲一个Tab键即可</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> 第一项：</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 第一项嵌套的第一个元素</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 第一项嵌套的第二个元素</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 第二项：</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 第二项嵌套的第一个元素</span><br><span class=\"line\"><span class=\"bullet\">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-表格\"><a href=\"#Markdown-表格\" class=\"headerlink\" title=\"Markdown 表格\"></a>Markdown 表格</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">|表头|表头|表头|</span><br><span class=\"line\">|---|:--:|---:|</span><br><span class=\"line\">|内容|内容|内容|</span><br><span class=\"line\">|内容|内容|内容|</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第二行分割表头和内容<br>-有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右</p>\n</blockquote>\n<h2 id=\"Markdown-代码\"><a href=\"#Markdown-代码\" class=\"headerlink\" title=\"Markdown 代码\"></a>Markdown 代码</h2><h3 id=\"单行代码\"><a href=\"#单行代码\" class=\"headerlink\" title=\"单行代码\"></a>单行代码</h3><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`hello world`</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"code\">```)语言</span></span><br><span class=\"line\"><span class=\"code\">  代码内容</span></span><br><span class=\"line\"><span class=\"code\">(```</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-流程图\"><a href=\"#Markdown-流程图\" class=\"headerlink\" title=\"Markdown 流程图\"></a>Markdown 流程图</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"code\">```)flow</span></span><br><span class=\"line\"><span class=\"code\">st=&gt;start: 开始</span></span><br><span class=\"line\"><span class=\"code\">op=&gt;operation: My Operation</span></span><br><span class=\"line\"><span class=\"code\">cond=&gt;condition: Yes or No?</span></span><br><span class=\"line\"><span class=\"code\">e=&gt;end</span></span><br><span class=\"line\"><span class=\"code\">st-&gt;op-&gt;cond</span></span><br><span class=\"line\"><span class=\"code\">cond(yes)-&gt;e</span></span><br><span class=\"line\"><span class=\"code\">cond(no)-&gt;op</span></span><br><span class=\"line\"><span class=\"code\">(```</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Markdown-换行\"><a href=\"#Markdown-换行\" class=\"headerlink\" title=\"Markdown 换行\"></a>Markdown 换行</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">连续两个以上空格+回车</span><br></pre></td></tr></table></figure>\n<p>&nbsp;<strong>或者</strong></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">使用html语言换行标签<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Markdown-缩进字符\"><a href=\"#Markdown-缩进字符\" class=\"headerlink\" title=\"Markdown 缩进字符\"></a>Markdown 缩进字符</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">&amp;nbsp;</span>  缩进1/4中文</span><br><span class=\"line\"><span class=\"literal\">&amp;ensp;</span>  缩进半个中文，一个字符</span><br><span class=\"line\"><span class=\"literal\">&amp;emsp;</span>  缩进一个中文，2个字符</span><br></pre></td></tr></table></figure>","tags":["Markdown"]},{"title":"Hello World","url":"/2024/09/05/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"动态规划做题总结","url":"/2024/10/02/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/","content":"<h1 id=\"入门-DP\"><a href=\"#入门-DP\" class=\"headerlink\" title=\"入门 DP\"></a>入门 DP</h1><h2 id=\"爬楼梯\"><a href=\"#爬楼梯\" class=\"headerlink\" title=\"爬楼梯\"></a>爬楼梯</h2><h3 id=\"爬楼梯-1\"><a href=\"#爬楼梯-1\" class=\"headerlink\" title=\"爬楼梯\"></a>爬楼梯</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">climbStairs</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;f(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">        f[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,f[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">            f[i]=f[i<span class=\"number\">-1</span>]+f[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[n];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"打家劫舍\"><a href=\"#打家劫舍\" class=\"headerlink\" title=\"打家劫舍\"></a>打家劫舍</h2><h2 id=\"最大子数组和（最大子段和）\"><a href=\"#最大子数组和（最大子段和）\" class=\"headerlink\" title=\"最大子数组和（最大子段和）\"></a>最大子数组和（最大子段和）</h2><h1 id=\"网格图-DP\"><a href=\"#网格图-DP\" class=\"headerlink\" title=\"网格图 DP\"></a>网格图 DP</h1><h2 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h2><h3 id=\"珠宝的最高价值\"><a href=\"#珠宝的最高价值\" class=\"headerlink\" title=\"珠宝的最高价值\"></a>珠宝的最高价值</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">jewelleryValue</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; frame)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=frame.size();</span><br><span class=\"line\">        <span class=\"type\">int</span> m=frame[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; f(n,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">        f[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=frame[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123; <span class=\"comment\">//处理第一列</span></span><br><span class=\"line\">            f[i][<span class=\"number\">0</span>]=f[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+frame[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)&#123; <span class=\"comment\">//处理第一行</span></span><br><span class=\"line\">            f[<span class=\"number\">0</span>][j]=f[<span class=\"number\">0</span>][j<span class=\"number\">-1</span>]+frame[<span class=\"number\">0</span>][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">                f[i][j]=max(f[i<span class=\"number\">-1</span>][j],f[i][j<span class=\"number\">-1</span>])+frame[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[n<span class=\"number\">-1</span>][m<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">/*注意到状态转移方程中，f(i,j) 只会从 f(i−1,j) 和 f(i,j−1) 转移而来，而与 f(i−2,⋯) 以及更早的状态无关，因此我们同一时刻只需要存储最后两行的状态，即使用两个长度为 n 的一位数组代替 n×m 的二维数组 f，交替地进行状态转移，减少空间复杂度。*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">jewelleryValue</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; frame)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=frame.size();</span><br><span class=\"line\">        <span class=\"type\">int</span> m=frame[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; f(<span class=\"number\">2</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> pos=i%<span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">                f[pos][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span>) f[pos][j]=max(f[pos][j],f[<span class=\"number\">1</span>-pos][j]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&gt;<span class=\"number\">0</span>) f[pos][j]=max(f[pos][j],f[pos][j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">                f[pos][j]+=frame[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[(n<span class=\"number\">-1</span>)%<span class=\"number\">2</span>][m<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不同路径\"><a href=\"#不同路径\" class=\"headerlink\" title=\"不同路径\"></a>不同路径</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">uniquePaths</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; f(m,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++) f[i][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++) f[<span class=\"number\">0</span>][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                f[i][j]=f[i<span class=\"number\">-1</span>][j]+f[i][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[m<span class=\"number\">-1</span>][n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">/*此外，由于 f(i,j) 仅与第 i 行和第 i−1 行的状态有关，因此我们可以使用滚动数组代替代码中的二维数组，使空间复杂度降低为 O(n)。*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">uniquePaths</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt; <span class=\"title function_\">f</span><span class=\"params\">(n,<span class=\"number\">1</span>)</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                f[j]+=f[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[n - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"不同路径-II\"><a href=\"#不同路径-II\" class=\"headerlink\" title=\"不同路径 II\"></a>不同路径 II</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">uniquePathsWithObstacles</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; obstacleGrid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> m=obstacleGrid.size();</span><br><span class=\"line\">        <span class=\"type\">int</span> n=obstacleGrid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; f(m,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123; <span class=\"comment\">//处理第一列</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obstacleGrid[i][<span class=\"number\">0</span>]==<span class=\"number\">1</span>)&#123; <span class=\"comment\">//有障碍 </span></span><br><span class=\"line\">                f[i][<span class=\"number\">0</span>]=<span class=\"number\">0</span>; </span><br><span class=\"line\">                <span class=\"keyword\">break</span>; <span class=\"comment\">//后面都到达不了</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> f[i][<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;  <span class=\"comment\">//处理第一行</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(obstacleGrid[<span class=\"number\">0</span>][j]==<span class=\"number\">1</span>)&#123; <span class=\"comment\">//有障碍</span></span><br><span class=\"line\">                f[<span class=\"number\">0</span>][j]=<span class=\"number\">0</span>; </span><br><span class=\"line\">                <span class=\"keyword\">break</span>; <span class=\"comment\">//后面都到达不了</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> f[<span class=\"number\">0</span>][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(obstacleGrid[i][j]==<span class=\"number\">1</span>) f[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> f[i][j]=f[i<span class=\"number\">-1</span>][j]+f[i][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> f[m<span class=\"number\">-1</span>][n<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最小路径和\"><a href=\"#最小路径和\" class=\"headerlink\" title=\"最小路径和\"></a>最小路径和</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minPathSum</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; grid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=grid.size();</span><br><span class=\"line\">        <span class=\"type\">int</span> m=grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(n,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=grid[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++) dp[i][<span class=\"number\">0</span>]=dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+grid[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++) dp[<span class=\"number\">0</span>][j]=dp[<span class=\"number\">0</span>][j<span class=\"number\">-1</span>]+grid[<span class=\"number\">0</span>][j];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">                dp[i][j]=min(dp[i<span class=\"number\">-1</span>][j],dp[i][j<span class=\"number\">-1</span>])+grid[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[n<span class=\"number\">-1</span>][m<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三角形最小路径和\"><a href=\"#三角形最小路径和\" class=\"headerlink\" title=\"三角形最小路径和\"></a>三角形最小路径和</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minimumTotal</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; triangle)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=triangle.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(n,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=triangle[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            dp[i][<span class=\"number\">0</span>]=dp[i<span class=\"number\">-1</span>][<span class=\"number\">0</span>]+triangle[i][<span class=\"number\">0</span>]; <span class=\"comment\">//第一列只能从上面转移</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;i;j++)&#123;</span><br><span class=\"line\">                dp[i][j]=min(dp[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>],dp[i<span class=\"number\">-1</span>][j])+triangle[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            dp[i][i]=dp[i<span class=\"number\">-1</span>][i<span class=\"number\">-1</span>]+triangle[i][i];<span class=\"comment\">//最后一列只能从左上转移</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *min_element(dp[n<span class=\"number\">-1</span>].begin(),dp[n<span class=\"number\">-1</span>].end());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">/*可以发现，dp[i][j] 只与 dp[i−1][..] 有关，而与 dp[i−2][..] 及之前的状态无关，因此我们不必存储这些无关的状态。具体地，我们使用两个长度为 n 的一维数组进行转移，将 i 根据奇偶性映射到其中一个一维数组，那么 i−1 就映射到了另一个一维数组。这样我们使用这两个一维数组，交替地进行状态转移。*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minimumTotal</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; triangle)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=triangle.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(<span class=\"number\">2</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=triangle[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> cur=i%<span class=\"number\">2</span>; <span class=\"comment\">//当前行</span></span><br><span class=\"line\">            <span class=\"type\">int</span> pre=<span class=\"number\">1</span>-cur; <span class=\"comment\">//上一行</span></span><br><span class=\"line\">            dp[cur][<span class=\"number\">0</span>]=dp[pre][<span class=\"number\">0</span>]+triangle[i][<span class=\"number\">0</span>]; <span class=\"comment\">//第一列只能从上面转移</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;i;j++)&#123;</span><br><span class=\"line\">                dp[cur][j]=min(dp[pre][j<span class=\"number\">-1</span>],dp[pre][j])+triangle[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            dp[cur][i]=dp[pre][i<span class=\"number\">-1</span>]+triangle[i][i];<span class=\"comment\">//最后一列只能从左上转移</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *min_element(dp[(n<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].begin(),dp[(n<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].end());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"下降路径最小和\"><a href=\"#下降路径最小和\" class=\"headerlink\" title=\"下降路径最小和\"></a>下降路径最小和</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minFallingPathSum</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; matrix)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=matrix.size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(n,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        copy(matrix[<span class=\"number\">0</span>].begin(),matrix[<span class=\"number\">0</span>].end(),dp[<span class=\"number\">0</span>].begin());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> minn=dp[i<span class=\"number\">-1</span>][j]; <span class=\"comment\">//都能从正上方转移</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&gt;<span class=\"number\">0</span>)&#123; <span class=\"comment\">//可以从左上方转移</span></span><br><span class=\"line\">                    minn=min(minn,dp[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(j&lt;n<span class=\"number\">-1</span>)&#123; <span class=\"comment\">//可以从右上方转移</span></span><br><span class=\"line\">                    minn=min(minn,dp[i<span class=\"number\">-1</span>][j+<span class=\"number\">1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                dp[i][j]=minn+matrix[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *min_element(dp[n<span class=\"number\">-1</span>].begin(),dp[n<span class=\"number\">-1</span>].end());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"矩阵中移动的最大次数\"><a href=\"#矩阵中移动的最大次数\" class=\"headerlink\" title=\"矩阵中移动的最大次数\"></a>矩阵中移动的最大次数</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">maxMoves</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; grid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> ans=<span class=\"number\">0</span>; <span class=\"type\">bool</span> flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=grid.size();</span><br><span class=\"line\">        <span class=\"type\">int</span> m=grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(n,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m)); <span class=\"comment\">//dp[i][j]==1表示(i,j)位置可到达</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) dp[i][<span class=\"number\">0</span>]=<span class=\"number\">1</span>; </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">1</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!flag) <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">            flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(grid[i][j<span class=\"number\">-1</span>]&lt;grid[i][j]&amp;&amp;dp[i][j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                    dp[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(grid[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]&lt;grid[i][j]&amp;&amp;dp[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                        dp[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i&lt;n<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(grid[i+<span class=\"number\">1</span>][j<span class=\"number\">-1</span>]&lt;grid[i][j]&amp;&amp;dp[i+<span class=\"number\">1</span>][j<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">                        dp[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dp[i][j])&#123;</span><br><span class=\"line\">                    flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    ans=j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//ans+=1;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"网格中的最小路径代价\"><a href=\"#网格中的最小路径代价\" class=\"headerlink\" title=\"网格中的最小路径代价\"></a>网格中的最小路径代价</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minPathCost</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; grid, <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; moveCost)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> m=grid.size(),n=grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(<span class=\"number\">2</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n));</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>]=grid[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> cur=i%<span class=\"number\">2</span>; <span class=\"comment\">//当前行</span></span><br><span class=\"line\">            <span class=\"type\">int</span> pre=<span class=\"number\">1</span>-cur; <span class=\"comment\">//上一行</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123; <span class=\"comment\">//当前行每一列</span></span><br><span class=\"line\">                dp[cur][j]=INT_MAX;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)&#123; <span class=\"comment\">//上一行每一列</span></span><br><span class=\"line\">                    dp[cur][j]=min(dp[cur][j],dp[pre][k]+moveCost[grid[i<span class=\"number\">-1</span>][k]][j]+grid[i][j]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *min_element(dp[(m<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].begin(),dp[(m<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].end());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"下降路径最小和-II\"><a href=\"#下降路径最小和-II\" class=\"headerlink\" title=\"下降路径最小和 II\"></a>下降路径最小和 II</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> &#123;</span></span><br><span class=\"line\">public:</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">minFallingPathSum</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt;&amp; grid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n=grid.size(),m=grid[<span class=\"number\">0</span>].size();</span><br><span class=\"line\">        <span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;&gt; dp(<span class=\"number\">2</span>,<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(m));</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>]=grid[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123; </span><br><span class=\"line\">            <span class=\"type\">int</span> cur=i%<span class=\"number\">2</span>; <span class=\"comment\">//当前行</span></span><br><span class=\"line\">            <span class=\"type\">int</span> pre=<span class=\"number\">1</span>-cur; <span class=\"comment\">//上一行</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123; <span class=\"comment\">//当前行每一列</span></span><br><span class=\"line\">                dp[cur][j]=INT_MAX;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)&#123; <span class=\"comment\">//上一行每一列</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j!=k)&#123;</span><br><span class=\"line\">                        dp[cur][j]=min(dp[cur][j],dp[pre][k]+grid[i][j]);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *min_element(dp[(n<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].begin(),dp[(n<span class=\"number\">-1</span>)%<span class=\"number\">2</span>].end());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h2><h1 id=\"背包\"><a href=\"#背包\" class=\"headerlink\" title=\"背包\"></a>背包</h1><h2 id=\"0-1-背包\"><a href=\"#0-1-背包\" class=\"headerlink\" title=\"0-1 背包\"></a>0-1 背包</h2><h2 id=\"完全背包\"><a href=\"#完全背包\" class=\"headerlink\" title=\"完全背包\"></a>完全背包</h2><h2 id=\"多重背包\"><a href=\"#多重背包\" class=\"headerlink\" title=\"多重背包\"></a>多重背包</h2><h2 id=\"分组背包\"><a href=\"#分组背包\" class=\"headerlink\" title=\"分组背包\"></a>分组背包</h2>","tags":["动态规划"]},{"title":"软件工程综合实践","url":"/2024/10/01/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%BB%BC%E5%90%88%E5%AE%9E%E8%B7%B5/","content":"<h2 id=\"故事场景\"><a href=\"#故事场景\" class=\"headerlink\" title=\"故事场景\"></a>故事场景</h2><blockquote>\n<p>你们是几名到某软件开发公司（以下简称T软）实习的学生。上班第一天，老板告诉你们，公司现在有个紧急项目，要求三周后上线，但是……上周末，这个项目唯一的程序员，小东，因不满公司的薪水待遇过低而离职了，现在留下了一个半成品的烂摊子，重担落在了你们几个毫无开发经验的实习生身上……</p>\n</blockquote>\n<h2 id=\"JDBC-项目\"><a href=\"#JDBC-项目\" class=\"headerlink\" title=\"JDBC 项目\"></a>JDBC 项目</h2><p><strong>主要目标：解决“使用 JDBC 封装数据层，并实现增删改查”的问题。</strong></p>\n<h2 id=\"前端项目\"><a href=\"#前端项目\" class=\"headerlink\" title=\"前端项目\"></a>前端项目</h2><p><strong>主要目标：解决“使用 HTML5+CSS3+JavaScript 开发企业级前端静态页面”的问题。</strong></p>\n<h2 id=\"JavaWeb-项目\"><a href=\"#JavaWeb-项目\" class=\"headerlink\" title=\"JavaWeb 项目\"></a>JavaWeb 项目</h2><p><strong>主要目标：解决“使用 Vue（前端）+Servlet（服务端）开发基于前后端分离架构应用程序”的问题。</strong></p>\n<h2 id=\"SpringBoot-项目\"><a href=\"#SpringBoot-项目\" class=\"headerlink\" title=\"SpringBoot 项目\"></a>SpringBoot 项目</h2><p><strong>主要目标：解决“使用 Vue（前端）+SpringBoot（服务端）开发基于前后端分离架构应用程序”的问题。</strong></p>\n<h2 id=\"SpringCloud-项目\"><a href=\"#SpringCloud-项目\" class=\"headerlink\" title=\"SpringCloud 项目\"></a>SpringCloud 项目</h2><p><strong>主要目标：解决“使用 Vue（前端）+SpringCloud（服务端）开发基于微服务的互联网应用程序”的问题。</strong></p>\n","tags":["开发"]},{"title":"计算机网络实践记录","url":"/2024/09/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E8%B7%B5%E8%AE%B0%E5%BD%95/","content":"<hr>\n<ul>\n<li>天津大学 2024 计算机网络 TCP 课程实践</li>\n<li>Lab Member：海棠未雨，梨花先雪</li>\n<li>最终成绩 +∞ 分捏 😋</li>\n</ul>\n<h2 id=\"文件结构说明\"><a href=\"#文件结构说明\" class=\"headerlink\" title=\"文件结构说明\"></a>文件结构说明</h2><figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\">tju<span class=\"emphasis\">_tcp ----------------- 项目根目录 </span></span><br><span class=\"line\"><span class=\"emphasis\">├─ build ---------------- 存放所有编译的中间文件</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ kernel.o</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ log.o</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ operation.o</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ rtt.o</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ time_</span>thread.o</span><br><span class=\"line\">│  ├─ tju<span class=\"emphasis\">_packet.o</span></span><br><span class=\"line\"><span class=\"emphasis\">│  └─ tju_</span>tcp.o</span><br><span class=\"line\">├─ inc ------------------ 存放所有头文件</span><br><span class=\"line\">│  ├─ global.h ---------- 定义一些全局都会用到的变量和结构</span><br><span class=\"line\">│  ├─ kernel.h ---------- 模拟一部分linux内核行为 比如如何发送数据到下一层 根据五元组查找socket等</span><br><span class=\"line\">│  ├─ tju<span class=\"emphasis\">_packet.h ------ 定义TCP所用到的数据包格式 提供各种数据包的操作(创建 获得字段等)</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ tju_</span>tcp.h --------- 需要实现的TCP的各种结构和功能的定义</span><br><span class=\"line\">│  ├─ log.h</span><br><span class=\"line\">│  ├─ operation.h</span><br><span class=\"line\">│  ├─ rtt.h</span><br><span class=\"line\">│  └─ time<span class=\"emphasis\">_thread.h</span></span><br><span class=\"line\"><span class=\"emphasis\">├─ src ------------------ 存放所有源代码文件</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ client.c ---------- 客户端主函数实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ server.c ---------- 服务端主函数实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ kernel.c ---------- 虚拟内核实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ tju_</span>packet.c ------ 可靠层包封装实现</span><br><span class=\"line\">│  ├─ tju<span class=\"emphasis\">_tcp.c --------- 可靠层实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ log.c ------------- 日志实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ operation.c ------- 数据包及缓冲区操作</span></span><br><span class=\"line\"><span class=\"emphasis\">│  ├─ rtt.c ------------- RTT计算实现</span></span><br><span class=\"line\"><span class=\"emphasis\">│  └─ time_</span>thread.c ----- 计时线程函数实现</span><br><span class=\"line\">├─ Makefile ------------- 生成脚本</span><br><span class=\"line\">├─ README.md ------------ 文件说明</span><br><span class=\"line\">└─ bin</span><br><span class=\"line\">   ├─ client</span><br><span class=\"line\">   └─ server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"具体实验记录\"><a href=\"#具体实验记录\" class=\"headerlink\" title=\"具体实验记录\"></a>具体实验记录</h2><h3 id=\"连接管理\"><a href=\"#连接管理\" class=\"headerlink\" title=\"连接管理\"></a>连接管理</h3><h3 id=\"可靠数据传输\"><a href=\"#可靠数据传输\" class=\"headerlink\" title=\"可靠数据传输\"></a>可靠数据传输</h3><h3 id=\"流量控制\"><a href=\"#流量控制\" class=\"headerlink\" title=\"流量控制\"></a>流量控制</h3><h3 id=\"拥塞控制\"><a href=\"#拥塞控制\" class=\"headerlink\" title=\"拥塞控制\"></a>拥塞控制</h3>","tags":["计算机网络"]}]